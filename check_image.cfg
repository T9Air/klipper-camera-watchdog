# CHANGE USER TO YOUR USERNAME

[extended_template]
# This section defines the path to the configuration file for the 3D print error detector
path: /home/USER/klipper-camera-watchdog/config.yaml

[extended_macro MOVE_BACK]
# This macro is used to move the printer head back to its previous position.
# It stores the current position in variables and then uses Gcode commands to move back.

# Set variables to store the current X, Y, and Z coordinates of the printer head
variable_saved_x: 0.0
variable_saved_y: 0.0
variable_saved_z: 0.0

gcode:
  # Set absolute positioning mode (G90)
  G90

  # Move the printer head back to the saved position at a feed rate of 300 mm/s
  G1 Z{saved_z} F300
  G1 X{saved_x} Y{saved_y} F300

[extended_macro CHECK_IMAGE]
# This macro checks for printing errors by taking an image and running a Python script.
# If the script detects no movement, the print job is cancelled.

gcode:
  # Get the current printer head position
  {% set position = printer.gcode_move.gcode_position %}

  # Store the current position in the MOVE_BACK macro's variables
  SET_GCODE_VARIABLE MACRO=MOVE_BACK VARIABLE=saved_x VALUE="{position.x}"
  SET_GCODE_VARIABLE MACRO=MOVE_BACK VARIABLE=saved_y VALUE="{position.y}"
  SET_GCODE_VARIABLE MACRO=MOVE_BACK VARIABLE=saved_z VALUE="{position.z}"

  # Save the current printer state (including position and other parameters)
  SAVE_GCODE_STATE NAME=saved_state

  # Set relative positioning for the extruder (M83)
  M83

  # Retract a small amount of filament (G1 E-10) to prevent oozing
  G1 E-10 F300

  # Set absolute positioning mode again (G90)
  G90

  # Move the print head to a designated position for taking an image (X0 Y220, Z45)
  G1 X0 Y220 F300
  G1 Z45 F300

  # Trigger a timelapse frame capture
  TIMELAPSE_TAKE_FRAME

  # Move the printer head back to its previous position using the MOVE_BACK macro
  MOVE_BACK

  # Call the Python script to check the image for movement (function not shown here)
  # This function should return a string indicating success ("No movement detected") or failure
  {% set cancel_print = check_image() %}

  # Check the result of the Python script
  {% if cancel_print == "No movement detected" %}
    # Restore the previously saved printer state (position and other parameters)
    RESTORE_GCODE_STATE NAME=saved_state

    # Cancel the print job
    CANCEL_PRINT
  {% endif %}

  # Set relative positioning for the extruder (M83)
  M83

  # Extrude a small amount of filament to resume printing (G1 E10)
  G1 E10 F300

  # Restore the previously saved printer state (in case the print job wasn't cancelled)
  RESTORE_GCODE_STATE NAME=saved_state

